@model Marketer.Query.Queries.Orders.OrderQueryVM
@using Framework.Application

@{
    ViewData["Title"] = "سبد خرید";
    var url = ViewBag.Url;
}

<form class="container basket my-5" asp-action="UpdateBasket" method="post">
    <div class="basket-title">
        <p class="h6">محصولات اضافه شده</p>
    </div>
    <hr>
    <div id="productStockWarnings" class="text-center">
    </div>

    <div class="row">

        <div class="col-sm-12 col-md-3">
            <div class="basket-details">
                @*<div class="basket-details-title">
                    <p class="h6">جمع سبد خرید : <span id="totalPrice">@Model.PayAmount.ToMoney() تومان</span></p>
                    </div>
                    <hr>*@
                <div class="basket-details-title">
                    <p>تعداد محصولات : <span>@Model.ItemsCount</span></p>
                </div>
                <hr>
                <button type="submit" class="btn btn-secondary w-100">ثبت</button>
            </div>
        </div>

        <div class="col-sm-12 col-md-8">
            <table class="table w-100" style="text-align: center;" dir="rtl">
                <tr>
                    <th>#</th>
                    <th>عکس</th>
                    <th>قیمت محصول(تومان)</th>
                    <th>تخفیف محصول(تومان)</th>
                    <th>تعداد</th>
                </tr>
                @foreach (var item in Model.Items)
                {
                    <tr>
                        <td>
                            <a asp-area="" asp-action="Delete" asp-route-id="@item.Id" asp-route-productId="@item.ProductId">
                                <i class="fa fa-times text-danger"></i>
                            </a>

                        </td>
                        <td class="image-table">
                            <a asp-controller="Product" asp-action="Detail" asp-route-slug="@item.Product.Slug">
                                <img src="~/Pictures/@item.Product.Picture" alt="@item.Product.PictureAlt" title="@item.Product.PictureTitle">
                            </a>
                        </td>
                        <td id="price-@item.Product.Id">@item.Product.PurchasePrice.ToMoney()</td>
                        <td>@item.DiscountPrice.ToMoney()</td>
                        <td>
                            <input name="itemsId" value="@item.Id" type="hidden">
                            <input name="productsId" value="@item.ProductId" type="hidden">
                            <input type="number" value="@item.Count" onchange="checkStockWhenAddingHappen('@item.Product.Id', this.value)" id="quantity-@item.Product.Id" min="1" name="quantity" style="width: 3rem;">
                        </td>
                    </tr>
                }


            </table>
        </div>


    </div>
</form>

@section Scripts{
<script>
    const cookieName = "cart-items";

       function checkStockWhenAddingHappen(id , count) {

          var settings = {
        "url": "@url/Order/CheckStock",
        "method": "POST",
        "timeout": 0,
        "headers": {
            "Content-Type": "application/json"
        },
        "data": JSON.stringify({ "productId": id, "count": count }),
    };
    $.ajax(settings).done(function (data) {
        if (data.isInStock == false) {
            const warningsDiv = $('#productStockWarnings');
            if ($(`#${id}`).length == 0) {
                warningsDiv.append(`
                    <p class="alert alert-warning" id="${id}">
                         کالای
                        <strong>${data.productName}</strong>
                        در انبار کمتر از تعداد درخواستی موجود است <i class="fa fa-times"></i>
                    </p>
                `);
            }
        } else {
            if ($(`#${id}`).length > 0) {
                $(`#${id}`).remove();
            }
        }
    });

    var counter = document.getElementById('quantity-'+ id)
    if(count > 0)
        counter.setAttribute('value' , count)
       }
</script>
}